name: Build

on:
  push:
    paths-ignore:
      - "README.md"
      - ".gitignore"
    branches: [ master ]

jobs:
  build:
    name: Lint, test and build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [15.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn --frozen-lockfile
    - name: Check with ESLint
      run: yarn lint
    - name: Run unit tests
      run: yarn test --watchAll=false
    - name: Build
      run: yarn build
    - name: Tar files
      run: tar -cvzf build.tar.gz ./build
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: build.tar.gz

  deploy:
    name: Deploy to boardsite.io
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          cat >>~/.ssh/config <<END
          Host deploy
            HostName $SSH_HOST
            Port $SSH_PORT
            User $SSH_USER
            IdentityFile ~/.ssh/deploy.key
            StrictHostKeyChecking no
            LogLevel ERROR
          END
        env:
          SSH_USER: ${{ secrets.BOARDSITE_SSH_USER }}
          SSH_KEY: ${{ secrets.BOARDSITE_SSH_KEY }}
          SSH_HOST: ${{ secrets.BOARDSITE_SSH_HOST }}
          SSH_PORT: ${{ secrets.BOARDSITE_SSH_PORT }}
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Copy artifact
        run: scp ./build.tar.gz deploy:~/boardsite-io-deploy/build.tar.gz
      - name: Prepare artifact and deploy
        run: |
          ssh deploy << EOF
          cd ~/boardsite-io-deploy
          rm -r build && tar -xf build.tar.gz
          make
          make deploy
          EOF
