{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 12,
        "sourceType": "module"
    },
    "extends": [
        "airbnb",
        "plugin:jsx-a11y/recommended",
        "prettier",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "plugins": ["jsx-a11y", "react", "prettier", "@typescript-eslint", "import"],
    "rules": {
        "no-shadow": 0, // Enum bug fix
        "arrow-body-style": 0,
        "semi": 0,
        "no-param-reassign": 0, // redux slices
        "no-use-before-define": 0, // hoisting
        "no-empty": 0, // allow empty catch blocks
        "no-plusplus": 0, // i++
        "no-bitwise": 0, // shifting
        "react/jsx-props-no-spreading": 0, // spreading props sometimes makes things easier and more fun :)
        "react/prop-types": 0,
        "react/jsx-filename-extension": [
            "warn",
            { "extensions": [".ts", ".tsx"] }
        ],
        "jsx-a11y/click-events-have-key-events": 0,
        "prettier/prettier": [
            "error",
            {
                "semi": false
            }
        ],
        "one-var": 0,
        "lines-between-class-members": 0,
        "import/prefer-default-export": "off",
        "import/no-unresolved": "error",
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "ts": "never",
                "tsx": "never"
            }
        ],
        "@typescript-eslint/triple-slash-reference": "off",
        "@typescript-eslint/ban-types": "off",
        "react/require-default-props": 0,
        "padding-line-between-statements": "off",
        "@typescript-eslint/padding-line-between-statements": [
            "warn",
            {
                "blankLine": "always",
                "prev": ["function", "class", "interface", "type"],
                "next": "*"
            }
        ],
        "react/function-component-definition": "off"
    },
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".ts",
                ".tsx"
            ]
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
            }
        }
    }
}
